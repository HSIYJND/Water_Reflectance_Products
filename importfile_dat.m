function L2Data = importfile(filename)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   L2S = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   L2S = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   L2s = importfile('2019-167-193744_L2s.dat', 1, 3171);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/06/17 13:51:09

%% Initialize variables.
delimiter = '\t';
startRow = 1;
endRow = inf;

%% Read columns of data as text:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'WhiteSpace', '', 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric text to numbers.
% Replace non-numeric text with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = mat2cell(dataArray{col}, ones(length(dataArray{col}), 1));
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139]
    % Converts text in the input cell array to numbers. Replaced non-numeric
    % text with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1)
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData(row), regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if numbers.contains(',')
                thousandsRegExp = '^[-/+]*\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'))
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric text to numbers.
            if ~invalidThousandsSeparator
                numbers = textscan(char(strrep(numbers, ',', '')), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch
            raw{row, col} = rawData{row};
        end
    end
end


%% Split data into numeric and string columns.
rawNumericColumns = raw(:, [3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139]);
rawStringColumns = string(raw(:, [1,2]));


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

%% Make sure any text containing <undefined> is properly converted to an <undefined> categorical
for catIdx = [1,2]
    idx = (rawStringColumns(:, catIdx) == "<undefined>");
    rawStringColumns(idx, catIdx) = "";
end

%% Create output variable
L2Data = table;
L2Data.CAL_FILE_NAMESHSE424BcalHED424BcalHPL343BcalPLD343BcalMPR154aCA = categorical(rawStringColumns(:, 1));
L2Data.VarName2 = categorical(rawStringColumns(:, 2));
L2Data.VarName3 = cell2mat(rawNumericColumns(:, 1));
L2Data.VarName4 = cell2mat(rawNumericColumns(:, 2));
L2Data.VarName5 = cell2mat(rawNumericColumns(:, 3));
L2Data.VarName6 = cell2mat(rawNumericColumns(:, 4));
L2Data.VarName7 = cell2mat(rawNumericColumns(:, 5));
L2Data.VarName8 = cell2mat(rawNumericColumns(:, 6));
L2Data.VarName9 = cell2mat(rawNumericColumns(:, 7));
L2Data.VarName10 = cell2mat(rawNumericColumns(:, 8));
L2Data.VarName11 = cell2mat(rawNumericColumns(:, 9));
L2Data.VarName12 = cell2mat(rawNumericColumns(:, 10));
L2Data.VarName13 = cell2mat(rawNumericColumns(:, 11));
L2Data.VarName14 = cell2mat(rawNumericColumns(:, 12));
L2Data.VarName15 = cell2mat(rawNumericColumns(:, 13));
L2Data.VarName16 = cell2mat(rawNumericColumns(:, 14));
L2Data.VarName17 = cell2mat(rawNumericColumns(:, 15));
L2Data.VarName18 = cell2mat(rawNumericColumns(:, 16));
L2Data.VarName19 = cell2mat(rawNumericColumns(:, 17));
L2Data.VarName20 = cell2mat(rawNumericColumns(:, 18));
L2Data.VarName21 = cell2mat(rawNumericColumns(:, 19));
L2Data.VarName22 = cell2mat(rawNumericColumns(:, 20));
L2Data.VarName23 = cell2mat(rawNumericColumns(:, 21));
L2Data.VarName24 = cell2mat(rawNumericColumns(:, 22));
L2Data.VarName25 = cell2mat(rawNumericColumns(:, 23));
L2Data.VarName26 = cell2mat(rawNumericColumns(:, 24));
L2Data.VarName27 = cell2mat(rawNumericColumns(:, 25));
L2Data.VarName28 = cell2mat(rawNumericColumns(:, 26));
L2Data.VarName29 = cell2mat(rawNumericColumns(:, 27));
L2Data.VarName30 = cell2mat(rawNumericColumns(:, 28));
L2Data.VarName31 = cell2mat(rawNumericColumns(:, 29));
L2Data.VarName32 = cell2mat(rawNumericColumns(:, 30));
L2Data.VarName33 = cell2mat(rawNumericColumns(:, 31));
L2Data.VarName34 = cell2mat(rawNumericColumns(:, 32));
L2Data.VarName35 = cell2mat(rawNumericColumns(:, 33));
L2Data.VarName36 = cell2mat(rawNumericColumns(:, 34));
L2Data.VarName37 = cell2mat(rawNumericColumns(:, 35));
L2Data.VarName38 = cell2mat(rawNumericColumns(:, 36));
L2Data.VarName39 = cell2mat(rawNumericColumns(:, 37));
L2Data.VarName40 = cell2mat(rawNumericColumns(:, 38));
L2Data.VarName41 = cell2mat(rawNumericColumns(:, 39));
L2Data.VarName42 = cell2mat(rawNumericColumns(:, 40));
L2Data.VarName43 = cell2mat(rawNumericColumns(:, 41));
L2Data.VarName44 = cell2mat(rawNumericColumns(:, 42));
L2Data.VarName45 = cell2mat(rawNumericColumns(:, 43));
L2Data.VarName46 = cell2mat(rawNumericColumns(:, 44));
L2Data.VarName47 = cell2mat(rawNumericColumns(:, 45));
L2Data.VarName48 = cell2mat(rawNumericColumns(:, 46));
L2Data.VarName49 = cell2mat(rawNumericColumns(:, 47));
L2Data.VarName50 = cell2mat(rawNumericColumns(:, 48));
L2Data.VarName51 = cell2mat(rawNumericColumns(:, 49));
L2Data.VarName52 = cell2mat(rawNumericColumns(:, 50));
L2Data.VarName53 = cell2mat(rawNumericColumns(:, 51));
L2Data.VarName54 = cell2mat(rawNumericColumns(:, 52));
L2Data.VarName55 = cell2mat(rawNumericColumns(:, 53));
L2Data.VarName56 = cell2mat(rawNumericColumns(:, 54));
L2Data.VarName57 = cell2mat(rawNumericColumns(:, 55));
L2Data.VarName58 = cell2mat(rawNumericColumns(:, 56));
L2Data.VarName59 = cell2mat(rawNumericColumns(:, 57));
L2Data.VarName60 = cell2mat(rawNumericColumns(:, 58));
L2Data.VarName61 = cell2mat(rawNumericColumns(:, 59));
L2Data.VarName62 = cell2mat(rawNumericColumns(:, 60));
L2Data.VarName63 = cell2mat(rawNumericColumns(:, 61));
L2Data.VarName64 = cell2mat(rawNumericColumns(:, 62));
L2Data.VarName65 = cell2mat(rawNumericColumns(:, 63));
L2Data.VarName66 = cell2mat(rawNumericColumns(:, 64));
L2Data.VarName67 = cell2mat(rawNumericColumns(:, 65));
L2Data.VarName68 = cell2mat(rawNumericColumns(:, 66));
L2Data.VarName69 = cell2mat(rawNumericColumns(:, 67));
L2Data.VarName70 = cell2mat(rawNumericColumns(:, 68));
L2Data.VarName71 = cell2mat(rawNumericColumns(:, 69));
L2Data.VarName72 = cell2mat(rawNumericColumns(:, 70));
L2Data.VarName73 = cell2mat(rawNumericColumns(:, 71));
L2Data.VarName74 = cell2mat(rawNumericColumns(:, 72));
L2Data.VarName75 = cell2mat(rawNumericColumns(:, 73));
L2Data.VarName76 = cell2mat(rawNumericColumns(:, 74));
L2Data.VarName77 = cell2mat(rawNumericColumns(:, 75));
L2Data.VarName78 = cell2mat(rawNumericColumns(:, 76));
L2Data.VarName79 = cell2mat(rawNumericColumns(:, 77));
L2Data.VarName80 = cell2mat(rawNumericColumns(:, 78));
L2Data.VarName81 = cell2mat(rawNumericColumns(:, 79));
L2Data.VarName82 = cell2mat(rawNumericColumns(:, 80));
L2Data.VarName83 = cell2mat(rawNumericColumns(:, 81));
L2Data.VarName84 = cell2mat(rawNumericColumns(:, 82));
L2Data.VarName85 = cell2mat(rawNumericColumns(:, 83));
L2Data.VarName86 = cell2mat(rawNumericColumns(:, 84));
L2Data.VarName87 = cell2mat(rawNumericColumns(:, 85));
L2Data.VarName88 = cell2mat(rawNumericColumns(:, 86));
L2Data.VarName89 = cell2mat(rawNumericColumns(:, 87));
L2Data.VarName90 = cell2mat(rawNumericColumns(:, 88));
L2Data.VarName91 = cell2mat(rawNumericColumns(:, 89));
L2Data.VarName92 = cell2mat(rawNumericColumns(:, 90));
L2Data.VarName93 = cell2mat(rawNumericColumns(:, 91));
L2Data.VarName94 = cell2mat(rawNumericColumns(:, 92));
L2Data.VarName95 = cell2mat(rawNumericColumns(:, 93));
L2Data.VarName96 = cell2mat(rawNumericColumns(:, 94));
L2Data.VarName97 = cell2mat(rawNumericColumns(:, 95));
L2Data.VarName98 = cell2mat(rawNumericColumns(:, 96));
L2Data.VarName99 = cell2mat(rawNumericColumns(:, 97));
L2Data.VarName100 = cell2mat(rawNumericColumns(:, 98));
L2Data.VarName101 = cell2mat(rawNumericColumns(:, 99));
L2Data.VarName102 = cell2mat(rawNumericColumns(:, 100));
L2Data.VarName103 = cell2mat(rawNumericColumns(:, 101));
L2Data.VarName104 = cell2mat(rawNumericColumns(:, 102));
L2Data.VarName105 = cell2mat(rawNumericColumns(:, 103));
L2Data.VarName106 = cell2mat(rawNumericColumns(:, 104));
L2Data.VarName107 = cell2mat(rawNumericColumns(:, 105));
L2Data.VarName108 = cell2mat(rawNumericColumns(:, 106));
L2Data.VarName109 = cell2mat(rawNumericColumns(:, 107));
L2Data.VarName110 = cell2mat(rawNumericColumns(:, 108));
L2Data.VarName111 = cell2mat(rawNumericColumns(:, 109));
L2Data.VarName112 = cell2mat(rawNumericColumns(:, 110));
L2Data.VarName113 = cell2mat(rawNumericColumns(:, 111));
L2Data.VarName114 = cell2mat(rawNumericColumns(:, 112));
L2Data.VarName115 = cell2mat(rawNumericColumns(:, 113));
L2Data.VarName116 = cell2mat(rawNumericColumns(:, 114));
L2Data.VarName117 = cell2mat(rawNumericColumns(:, 115));
L2Data.VarName118 = cell2mat(rawNumericColumns(:, 116));
L2Data.VarName119 = cell2mat(rawNumericColumns(:, 117));
L2Data.VarName120 = cell2mat(rawNumericColumns(:, 118));
L2Data.VarName121 = cell2mat(rawNumericColumns(:, 119));
L2Data.VarName122 = cell2mat(rawNumericColumns(:, 120));
L2Data.VarName123 = cell2mat(rawNumericColumns(:, 121));
L2Data.VarName124 = cell2mat(rawNumericColumns(:, 122));
L2Data.VarName125 = cell2mat(rawNumericColumns(:, 123));
L2Data.VarName126 = cell2mat(rawNumericColumns(:, 124));
L2Data.VarName127 = cell2mat(rawNumericColumns(:, 125));
L2Data.VarName128 = cell2mat(rawNumericColumns(:, 126));
L2Data.VarName129 = cell2mat(rawNumericColumns(:, 127));
L2Data.VarName130 = cell2mat(rawNumericColumns(:, 128));
L2Data.VarName131 = cell2mat(rawNumericColumns(:, 129));
L2Data.VarName132 = cell2mat(rawNumericColumns(:, 130));
L2Data.VarName133 = cell2mat(rawNumericColumns(:, 131));
L2Data.VarName134 = cell2mat(rawNumericColumns(:, 132));
L2Data.VarName135 = cell2mat(rawNumericColumns(:, 133));
L2Data.VarName136 = cell2mat(rawNumericColumns(:, 134));
L2Data.VarName137 = cell2mat(rawNumericColumns(:, 135));
L2Data.VarName138 = cell2mat(rawNumericColumns(:, 136));
L2Data.VarName139 = cell2mat(rawNumericColumns(:, 137));

